{"posts":[{"title":"rs485","text":"参考文章: https://www.eltima.com/article/rs485-communication-guide/ RS485是一种在数据采集和工业控制中常用的通讯标准。它主要的优势之一就是可以在同一条总线上挂载多个设备，使得多个节点可以彼此连接。 什么是RS485RS-485(或EIA/TIA-485)是通讯物理层的一种标准接口，一种信号传输的方法。RS-485被创造出来用于扩展RS-232的物理性能。 RS-485的连接采用两线制（不包括GND）：正相数据线（A）、反相数据线（B）。A、B两相采用双绞线，传输信号的正反相，有效抑制了噪声。 通讯距离RS-485采用差分的信号传输，有效抑制了噪声；同时，双绞线可以被屏蔽，确保了传输数据的保护。这些使得RS-485上的数据可以以较高的速度传输长距离，可以达到1200m传输速率100Kbit/s。 1200m是RS-485的最大线长。 通常来说，线长（m）与数据传输速率（M bits per second, Mbps）的乘积不能超过108。比如，20米长的线的最大传输速率为5Mbits/s。 RS-485的特点 半双工通讯 由于RS-485的两根线实际上只用来传输同一个信号，这两根线可以看作一组数据线，它同一时刻只能进行发数据或者收数据，否则会产生信号的混乱。所以RS-485是一种半双工（可双向传输、但无法同时发送和接收）的通讯标准。 总线通讯 多个节点可挂载在同一条总线上 传输距离长 传输速度快 RS-485的通讯协议一种常用的RS-485的通讯协议的形式是定义一个主机，总线上剩下的节点均为从机。主机发送数据，从机只在总线上监听（接收）数据。也可以让每个节点独立地传输数据（意思应该是可以让多个节点发送，区别于上面那种方式），但这种情况下数据丢失的风险也会增大。 RS-485常用的一种通讯协议为Modbus Modbus是工业电子设备中广泛应用的一种串行通讯协议。在Modbus中，通讯建立在一个主节点(master/host/client)和多个从节点(slave/server)之间。主节点负责初始化数据交换。主节点可以主动将它的RS-485驱动转换到发送模式，同时其它RS-485设备工作在接收模式。从节点如果想要在通讯线上应答主节点，主节点会给它发送一个特殊的指令，给予目标设备权力，使其在一定时间内可以工作在发送模式下。 Modbus是让设备间彼此进行交互的最简单的协议之一。它对设备制造商来说非常容易实现，这也是导致它流行的主要原因；同时对工程师、编程人员来说比较困难，因为实现最终解决方案的所有困难都转移到了他的肩上，要求他要查看好几页的寄存器和变量，它们的地址，写数据、读数据和数据转换的各种函数。","link":"/2023/06/03/rs485/"},{"title":"A Review:Robust Locomotion for Biped Huamnoid Robots","text":"Abstract挑战：实现双足机器人的稳健(robust/高鲁棒性)运动 到目前为止，双足机器人可以穿越未知的地形，地面高度差(ground variation)超过腿长的20%；就意外的外力(external force)来说，双足机器人可以在静止以及行走过程中从突然的推动中恢复平衡。与稳健的行走相比，双足的奔跑还不太成熟，目前最高奔跑速度不到3m/s，对大干扰的鲁棒性也很差。 1.Introduction双足机器人研究的意义：双足机器人的研究有望为人体运动的动力学提供新的见解；同时，腿式机器人可以应用到更为复杂的场景中，如灾害救援、消防和外太空探索等。 人形机器人已经经过了数十年的研究和发展，但却很少被应用到我们的日常生活或其它实际场景中。大多数研发出的机器人都局限于结构化的环境中，而实际应用则要求机器人在处理高度的不确定性和大型的外部干扰的同时能够稳定运转。事实上，一点轻微的不规则也可能会破坏双足机器人的平衡，在复杂环境中，人形机器人仍很容易翻倒，并且缺乏对各种干扰的鲁棒性。 一般来说，双足机器人运动中的干扰(disturbance)或不确定性(uncertainty)包括未知地形(unknown terrain)、意外的外部力(unexpected external force)、参数误差(parametric error)、关节和电机摩擦(friction in joints and motors)、传感器误差(sensor errors)等。前两者属于**外部干扰(external disturbances)，而剩余的属于内部不确定性(internal uncertainties)**，通常导致了控制模型与实际机器人之间的差异。外部干扰中的第一个，地形变化，普遍存在于自然界和人工环境中。自然界中的大多数地形都不是平坦的，如岩石山地，而许多灾难和危险地区都有障碍物，如石头和废墟。 意外的力通常是由交互任务(interaction task)引起的，包括提起未知负载(lift unknown load)、协作运输(collaborative carrying)和意外碰撞(unexpected collision)等。如果机器人不能抵制不可预测的力，特别是冲击推力，那么人机协作(human-robot collaboration)就无法实现。因此，应该考虑外部干扰，包括崎岖的地形和意外的力，以实现双足人形机器人的稳健步行。 在外部干扰下缺乏稳健的步行，使得双足机器人在高速运动(high speed locomotion)应用中不太实用，例如跑步。跑步可以通过加快运动速度显著提高双足机器人的敏捷性和灵活性(agility and flexibility)。此外，跑步或跳跃技巧增强了机器人在离散地形(discrete terrains)上移动的能力。然而，即使稳健的步行得到很好的发展，也不一定能实现高性能的跑步。 本文按如下方式组织。Section II概述了允许双足机器人穿越各种地形(traverse various terrains)的研究。Section III讨论了冲击外部干扰(impulsive external disturbance)，提出了鲁棒控制(robust control)。在稳健的步行下，Section IV简要回顾了双足机器人跑步的现状。特别要注意的是，本文关注的是应用于实践和真实硬件的工作和研究。 2. Terrain Disturbance(地形干扰)当前的机器人研究已经开始将应用扩展至(通过((地形会产生意外变化)的非结构化环境)的运动)。这种扩展提出了挑战，因为在受控制的环境下可以完美移动的机器人可能会在与地形干扰的第一次接触后摔倒。 尽管已经进行了许多以改进对地面变化的稳健性为目标的研究，但双足机器人在崎岖地形上行走的显著限制仍然存在。直到2010年代初期，双足机器人只能适应不到腿部长度6%的计划外障碍。与日常生活中的常见障碍物（建筑物的台阶高度、市区街道人行道的路缘高度）高度相比，这个值异常的小(unrealistically small)。此外，高于几厘米的地面高度变化必须事先知道。这些机器人的行走速度被限制在大约1.0ms的平均步行速度。 到目前为止，为了保持稳定性并且在适用情况下确保感知(perception)的准确性，在不平坦的地形上步行的速度相对较低。在不了解地面的情况下(without the knowledge of ground)，步行的最高速度很少超过1m/s。本田(HONDA)自20世纪末开始开发HRP系列机器人，其中HRP-2自2004年推出以来成为人形机器人研究领域的成功平台。Takubo等人提出了基于**”零力矩点”(ZMP)的标准来解决崎岖地形步行问题。新提出的方法在HRP-2上得到了验证。在这项研究中，Takubo等人提出了“步上”(step up)和“步下”(step down)的概念，以描述常规平坦地面的变化。与“步上”或“步下”状态相对应，行走模式的降落时间(landing time)进行了调整。虽然“步”的高度小于10cm，但实验证明了所提出方法的有效性。HRP-2被HRP-4C和HRP-4所取代，以改进人形机器人的实用性。与HRP-2类似，处理器HRP-4(C)模型也是完全驱动的，其中机器人的自由度对应于驱动系统。Kajita等人成功地将姿态/力控制应用于稳定HRP-4C，通过将其简化为一个带有ZMP延迟的线性倒立摆**。通过略微调整预定轨迹，HRP-4C实现了在户外不平坦的路面上的稳健行走。路面的最大倾角约为3度。在没有任何关于户外地面轮廓的知识的情况下，HRP-4C可以使用规定的平坦路面行走模式穿越路面，行走速度非常缓慢，约为0.2m/s。 2019年，Caron等人在人形机器人的动态攀爬楼梯方面取得了突破。**攀爬楼梯的稳定控制器由两个部分组成：基于二次规划(quadratic programming)的扭矩分配(wrench distribution)和整体身体导纳控制器(admittance controller)**。在此项工作之前，很少进行无绳的阶梯攀爬，以防止机器人跌倒，并确保安全。Caron等人将得到的稳定控制器应用到HRP-4的动态楼梯攀爬上。在为期2周的重复实验中，鲁棒的稳定性被反复验证，并且HRP-4成功攀爬了一个每一节高18.5cm的工业楼梯。 与完全驱动(fully-actuated)的机器人相比，欠驱动(underactuated)的双足机器人由于其动态步态与人类运动一样简单和优雅而变得更加受欢迎。作为一个平面双足机器人，MABEL仅由2个电机驱动，其中一个控制所谓虚拟腿的角度，而另一个电机控制虚拟腿的长度或形状。Park等人设计了一个切换控制器，允许该机器人适应20cm的地面高度变化。当检测到“步下”(step-down)高度时，控制器切换被激活，并打开所谓的“步下”控制器以拒绝地形干扰。如图1所示，MABEL能够从高20.37cm的平台上走下，而不会摔倒。在实验中，MABEL一开始在平坦的地面上行走，走上一个17.78cm的平台并从上面走下。在完成第二圈之后，17cm的障碍物被替换为20cm的障碍物。图1从视频捕捉的截图中展示了成功走下，并抑制了躯干振荡(torso oscillation)。值得注意的是，MABEL的腿长约为1m，这表明所提出的切换控制允许双足机器人在超过腿长20%的地形变化上行走。同时值得注意的是，在实验中，MABEL没有任何先验信息(priori information)或额外的传感器测量就可以适应未计划的障碍物。换句话说，MABEL可以盲走(blindly traverse)，并且对于上下阶梯(step-up and step-down)的干扰具有鲁棒性。 密歇根大学的Griffin等人从MABEL出发，开发出其继承者MARLO，以继续研究人形机器人的盲走，目的是解决控制策略问题，在没有感知和先验知识的情况下应对地形干扰。MARLO的创新之处在于，通过非完整虚约束允许持续的基于速度的姿态调整控制策略。此外，地形干扰也被考虑在步态优化中。图2展示了进行室内实验以验证MARLO在随机排列的障碍物上行走时的稳定性和鲁棒性。 在此之前，MARLO在有组织的板堆上进行了测试。两个实验中的板或板叠的高度从1.2cm到7.9cm不等。在现实环境的户外实验中，MARLO越过了有斜坡的人行道、停车场和草地，适应了各种地面和地面类型。尽管聚焦于与MABEL相同的问题，但MARLO没有采用MABEL的设计，其连杆腿和驱动方法有很大的差异。事实上，MARLO的配置是卡内基梅隆大学ATRIAS系列机器人的密歇根版。 ATRIAS是一台欠驱动的人形双足机器人，每个髋关节都有两个执行器。这两个串联电机驱动四连杆机构在矢状面上的运动，而在三维行走时，另一个电机控制冠状面上的腿。2015年，Batts等人开发了一个电机扭矩控制器，以使得ATRIAS适应适度的地形变化。在矢状面上，所提出的虚拟神经肌肉控制(virtual neuromuscular control)通过模拟神经肌肉模型(emulate neuromuscular model)调节了腿部的运动。模拟测试验证了在[-2,2]cm的高度范围内，ATRIAS的通过成功率可以达到90%。这个成功率在地形高度达到[-3,3]cm时急剧下降至50%。对于最高地形的鲁棒性略微高于+-7cm。在[-7,7]cm的高度范围内，机器人容易摇摆并向后倒。在2017年，Nguyen等人还实施了对ATRIAS的另一种处理随机地面变化的方法。所提出的方法应用了**2步周期步态优化(2-step periodic gait optimazation)和步态库内插(gait library-interpolation)**来实现期望的步长和步高。2步周期步态优化考虑到了下一个脚步的期望位置，并且使得机器人可以在不同的行走步态之间转换。 MPC与2步周期步态优化？ 另一方面，步态内插允许适应地形变化。研究团队使用ATRIAS进行了首次实验性的人形机器人动态行走。如图3所示，地形变化是通过踏石进行模拟的，踏石的步长和步高分别从30到80cm和从-30到30cm不等。 在实验中，ATRIAS实现了0.6m/s平均走速的快速行走，并能够适应随机排列的步长在[23,78]cm范围内的踏石。2019年，Li等人建议使用智能方法来改善ATRIAS双足机器人对地面干扰的鲁棒性和适应性。引入深度强化学习来训练高保真度模拟器中的结构化控制器。结构化控制器可以分为两部分：神经网络部分定期更新，而其余控制器在训练期间保持不变。这种策略被证明可以加快学习速度并得出可行的控制策略。训练后，神经网络策略对地面高度扰动表现出较高的稳健性和可行性。另一方面，在模拟和硬件之间可以达到80%的转移率。请注意，上述关于ATRIAS的研究都局限于平面运动。 3. Impulsive Force Disturbance(冲激性的力干扰)除了地形变化之外，突如其来的外部力也是让双足机器人倾倒或倾覆的另一个普遍原因。在所有种类的外部力中，冲激性质的推力是最棘手的一种，因此它需要控制器对机器人的稳定性做出快速反应。如果双足机器人无法从突然的外部冲击中恢复平衡，就无法实现人类和人形机器人之间的安全物理交互。数十年来，对人形机器人在外部力上的平衡恢复进行了研究。但是大多数情况下都假设双足机器人在突发事件发生时处于静止状态。Fard等人还声称，欠驱动机器人的推力恢复比全驱动机器人更困难，当欠驱动的自由度超过2时，更难控制。尽管遇到各种困难，许多干扰抑制方法已被设计并经过实验验证。在相对较小的干扰下，可以通过在脚掌内移动重心来保持稳定。随着干扰变大和机器人变得更加动态，这种方法的效果变得越来越小。作为脚踝策略的替代，基于地面接触力的控制可以使机器人在更大的干扰下保持姿态，但无法适应行走中的干扰。最近，提出了一种调整步伐落点(placement)的方法，这种方法更加自然、更接近于人类。 在2008年，Prahlad等人研制了一台高0.5m的MANUS-I双足机器人，以验证人形机器人的各种技术。提出了一种基于脚踝策略的方法，以改善受干扰时的运动稳定性。使用每只脚上的力传感器的测量值计算出补偿力矩，并将其注入踝关节。实验证明该机器人能够抵制不同形式的干扰。在第一个案例中，MANUS-I走上一个10度的坡并走下3度的另一个坡，同时携带了额外的390g的重量（身体重量的17%）。第二个案例表明，如果遭受冲击性推力，MANUS-I可以在几个步行周期后恢复其ZMP位置。 Ott等人在2011年的研究是使用地面接触力从外部干扰中恢复姿态的典型案例。他们提出的平衡控制器计算了力和扭矩，并在预定义的接触点之间分配。力矩的分配通过优化接触力的欧几里得范数来完成。该研究利用DLR双足机器人进行了两个实验以评价该平衡算法。第一个实验利用一个摆，产生了约5.8J的冲击。 衡量冲击的量是什么，能量？ 在第二个实验中，机器人的躯干被推动，产生了不同的位置和方向的扰动。他们提出的策略将恢复姿态所需的净力矩分布到预定义的接触点上。 HRP3L-JSK是一台具有12个腿自由度的高功率人形机器人。它使用在线步伐替代(online footstep replacement)实现了对外部力的鲁棒性。在线步伐替换被在线优化来跟踪ZMP轨迹，ZMP轨迹的目标是质心轨迹。图5显示HRP3L-JSK在实验中被狠狠踢了一脚。这一踢的峰值达到了597N，持续0.1s。尽管持续时间很短，但由于推力的作用点的高度超过了0.8m，这一踢产生了巨大的力矩扰动。如图5所示，通过在线优化，机器人的质心收敛到其期望轨迹。 为了应对行走状态下的大冲力干扰，Yu等人提出了一种步伐落点策略，该策略还可以减少足部落地冲击。新的落足点是通过利用身体加速度测量值映射ZMP变化来估计的。通过集成PD控制器，可以改善对干扰的鲁棒性，因为控制器有效地减轻了身体震动。在实验中，机器人在第三步的双相中收到突然的外部推力干扰。推力约为212N，持续时间为0.1s，即21.2Ns（冲量）。图6显示了外部推力被施加时的第五个快照。 从第四步（第六个快照）开始，机器人计算下一步的落点并恢复到稳定的行走状态。通过比较第六个快照与第七个和第八个快照，可以轻松地发现右脚（由红色方块标记）落在原始足迹落点地右侧。着陆力缓解策略也在同一时间运行。实验证明，如果不应用足部着陆冲击控制，稳定行走是不可行的。 4. Running连续的单脚支撑相和瞬间的双脚支撑相构成了步行的步态。因此，腿持续处于单腿支撑相。但是奔跑的步态由支撑相和飞行相组成。双足奔跑的鲁棒稳定边界低于行走，因为机器人需要快速改变关节变量并产生大冲击力。在早期，研究人员着重于控制机器人的落地位置以实现奔跑。在许多后续研究中，从人类运动中学习质心运动的模型被用于建模和控制双足奔跑。双足奔跑中质心的轨迹被研究和设计，还使用了线性倒立摆模型和弹簧倒立摆模型用于奔跑机器人。为了生成轨迹，使用了基于ZMP的步态模式以及包括步态合成、步态算法和步态参数优化在内的方法。Poincare映射通常用于为双足机器人设计奔跑参考轨迹。 开发了一种双足机器人HRP-2LR，它可以跳跃和奔跑。为了跟随总的线和角的动量的期望轨迹，预先计算了HRP-2LR奔跑的ZMP模式。在实验中，还实现了前进速度为0.15m/s的跳跃。在其后续研究中，提出了一种奔跑控制器以稳定系统对抗干扰。奔跑控制器包括姿态稳定、倒立摆稳定、接触力矩控制、冲击吸收控制、脚垂直力控制和扭矩分配控制。随后，先进的HRP-2LR利用分析出来的动量控制方法生成了奔跑模式。跑步模式设计时，支撑时间为0.3s，飞行时间为0.06s，速度为0.25m/s。 在与ASIMO相同尺寸的真实机器人上实现了10km/h(2.8m/s)的奔跑。为了实现这个目标，提出了一种将奔跑步态模式分解和合成为垂直、水平和旋转三个组成部分的方法，以满足时变地面摩擦限制。此外，它们扩展了边界条件-运动的分散分量，包括重心的垂直加速度。尤其是这些方法适用于步行和奔跑之间的中间运动，涉及非飞行阶段或在摩擦系数很小的地面上行走。 为了使双足机器人稳定奔跑，提出了平衡控制，使机器人在受到干扰时通过动态地改变接触脚的位置来保持平衡。他们采用了无力传感器的柔顺控制，通过前馈扭矩和位置控制的调整使关节柔性化。同时，他们使用了反馈控制，通过测量机器人躯干的方向来决定脚的位置。该论文将快速奔跑动作实现到一个人形机器人上，该机器人可以以平均速度7.0km/h奔跑，如图7所示。 双足机器人ATRIAS在以2.5m/s的速度奔跑时表现杰出。ATRIAS的工作旨在证明，使用基于被动动力学的方法实现3维双足行走和奔跑不仅是可能的，而且结果足够稳健，可以作为在非结构化环境中实现实际运动的可行框架。值得注意的是，ATRIAS可以从静止状态加速，平稳地过渡到奔跑步态。 5. conclusion对于仅有两条腿和点接触的双足人形机器人来说，运动稳定是最基本的问题。稳定双足机器人的最大挑战是实现高鲁棒性，使机器人能够从严重的干扰中恢复，特别是来自外部的干扰。除了双足机器人本身的复杂性，所应用的环境往往也很复杂且未知。尽管如此，很多鲁棒性运动的研究已经完成并经过实验证实。 对不同地形的扰动-尤其是未知地形-的适应能力得到了大幅提高。直到2010年前，适应地形的变化不超过机器人腿长的6%。在Park等人的2012年的研究中，这个数字增加到了超过20%。在ATRIAS的实验中，障碍物-踏石的高度达到了30cm，超过了腿长的50%。 接受外部干扰的研究从不同的角度进行。最流行的方法至少包括脚踝策略、接触力控制和脚步替换，其中，脚步替换最有前途，能够在动态步行下实现高鲁棒性。脚步替换策略成功地从步行中的突然推动(约21Ns)中恢复双足机器人。 与稳健的步行相比，双足奔跑还不够成熟。一些双足机器人，例如ASIMO和ATRIAS，已经相对成熟，并实现了稳定的奔跑。但是，最佳的奔跑速度还没有突破3.0m/s，并且鲁棒性较差，无法抵御大幅度的干扰。总之，在双足奔跑方面仍有许多工作需要完成，特别是在高速奔跑方面。 总结文章介绍了关于双足机器人的鲁棒运动的内容，主要从三方面来介绍：地形干扰、冲激性的力干扰以及奔跑，并且关注的是应用于实践和真实硬件的研究。 在地形干扰方面，分两部分进行介绍：全驱动(fully-actuated)的双足机器人与欠驱动(underactuated)的双足机器人。 机器人 控制方法 完全驱动 参数指标 特点(feature) HRP-2 零力矩点ZMP √ 步高&lt;10cm HRP-4C 简化为一个带有ZMP延迟的线性倒立摆；姿态/力控制 √ 路面最大倾角约3°，行走速度约0.2m/s 没有先验信息，没有地面轮廓信息 HRP-4 基于二次规划的扭矩分配+整体身体导纳控制器（动态攀爬楼梯） √ 楼梯一节高18.5cm 无绳 MABEL 切换控制器 地面高度变化20cm，腿长的20% 无先验信息和额外的传感器测量,盲走 MARLO 通过非完整虚约束允许持续的基于速度的姿态调整控制策略 障碍高度[1.2,7.9]cm ATRIAS 虚拟神经肌肉控制 [-2,2]cm，通过成功率90%；[-3,3]cm，通过成功率50%；[-7,7]cm，容易摇摆并向后倒；对最高地形的鲁棒性略高于+-7cm 2步周期步态优化(2-step periodic gait optimazation)和步态库内插(gait library-interpolation) 踏石的步长和步高分别从30到80cm和从-30到30cm不等；实现了0.6m/s平均走速的快速行走，并能够适应随机排列的步长在[23,78]cm范围内的踏石 2步周期步态优化考虑到了下一个脚步的期望位置，并且使得机器人可以在不同的行走步态之间转换；另一方面，步态内插允许适应地形变化。 引入深度强化学习来训练高保真度模拟器中的结构化控制器；结构化控制器可以分为两部分：神经网络部分定期更新，而其余部分在训练期间保持不变 训练后，神经网络策略对地面高度扰动表现出较高的稳健性和可行性。另一方面，在模拟和硬件之间可以达到80%的转移率。 这种策略被证明可以加快学习速度并得出可行的控制策略。 针对冲激性的力干扰，有三种主流方法：脚踝策略、接触力控制、调整步伐落点的策略 机器人 控制方法 参数指标 特点 MANUS-I 脚踝策略，使用每只脚上的力传感器的测量值计算出补偿力矩，并将其注入踝关节 机器人高0.5m；走上一个10度的坡并走下3度的另一个坡，同时携带了额外的390g的重量（身体重量的17%） 如果遭受冲击性推力，MANUS-I可以在几个步行周期后恢复其ZMP位置 DLR 地面接触力控制，平衡控制器计算了力和扭矩，并在预定义的接触点之间分配。力矩的分配通过优化接触力的欧几里得范数来完成。 实验一的摆，产生了约5.8J的冲击 HRP3L-JSK 在线步伐替代(online footstep replacement)。在线步伐替换被在线优化来跟踪ZMP轨迹，ZMP轨迹的目标是质心轨迹。 机器人有12个腿自由度，高功率；踢的峰值达到了597N，持续0.1s。尽管持续时间很短，但由于推力的作用点的高度超过了0.8m，这一踢产生了巨大的力矩扰动。 通过在线优化，机器人的质心收敛到其期望轨迹。 步伐落点策略，新的落足点是通过利用身体加速度测量值映射ZMP变化来估计的。通过集成PD控制器，可以改善对干扰的鲁棒性，因为控制器有效地减轻了身体震动 机器人在第三步的双相中收到突然的外部推力干扰。推力约为212N，持续时间为0.1s，即21.2Ns（冲量） 减少足部落地冲击 针对奔跑，早期的方法是控制机器人的落地位置，随后流行的方法是参考人类奔跑时质心运动的轨迹 机器人 控制方法 参数指标 特点 HRP-2LR 为了跟随总的线和角的动量的期望轨迹，预先计算了HRP-2LR奔跑的ZMP模式。在其后续研究中，提出了一种奔跑控制器以稳定系统对抗干扰。奔跑控制器包括姿态稳定、倒立摆稳定、接触力矩控制、冲击吸收控制、脚垂直力控制和扭矩分配控制。 支撑时间为0.3s，飞行时间为0.06s，速度为0.25m/s；实现了前进速度为0.15m/s的跳跃 与ASIMO相同尺寸的真实机器人 提出了一种将奔跑步态模式分解和合成为垂直、水平和旋转三个组成部分的方法，以满足时变地面摩擦限制； 实现了10km/h(2.8m/s)的奔跑 此外，它们扩展了边界条件-运动的分散分量，包括重心的垂直加速度。尤其是这些方法适用于步行和奔跑之间的中间运动，涉及非飞行阶段或在摩擦系数很小的地面上行走。 提出了平衡控制，使机器人在受到干扰时通过动态地改变接触脚的位置来保持平衡。他们采用了无力传感器的柔顺控制，通过前馈扭矩和位置控制的调整使关节柔性化。同时，他们使用了反馈控制，通过测量机器人躯干的方向来决定脚的位置。 以平均速度7.0km/h奔跑 ATRIAS 使用基于被动动力学的方法实现3维双足行走和奔跑 以2.5m/s的速度奔跑 ATRIAS的工作旨在证明，使用基于被动动力学的方法实现3维双足行走和奔跑不仅是可能的，而且结果足够稳健，可以作为在非结构化环境中实现实际运动的可行框架；ATRIAS可以从静止状态加速，平稳地过渡到奔跑步态。","link":"/2023/06/11/a-review-robust-locomotion-for-biped-huamnoid-robots/"},{"title":"ML(1):dataPreprocess","text":"数据处理时经常会遇到缺失值NA(not a number)，遇到这样的值时需要我们对其进行一些处理消除缺失值，使其都变为数值，这样才能转换为有意义的张量进行运算。 下面演示了如何使用pandas删除缺失值最多的列、用插值法填补缺失值、将pandas的数据DataFrame转换为tensor 首先创建data目录并创建一个csv文件，存储数据： import os import torch os.makedirs(os.path.join('..', 'data'), exist_ok=True) #目录已存在也不抛出错误 data_file = os.path.join('..', 'data', 'house_tiny.csv') with open(data_file, 'w') as f: #打开文件 f.write('NumRooms,Alley,Price\\n') # 列名.\\n换行 f.write('NA,Pave,127500\\n') # 每行表示一个数据样本 f.write('2,NA,106000\\n') f.write('4,NA,178100\\n') f.write('NA,NA,140000\\n') 然后用pandas库读取csv文件，得到数据DataFrame： import pandas as pd data = pd.read_csv(data_file) print(data) 我们需要计算每一列缺失值的数量，从而找出缺失值最多的一列： colNan = data.isnull().sum(axis=0) #计算每一列缺失值的数量. print(colNan) #都变成了3*1,1列 maxNan = 0 #Na数量最大值 colName = 0 #Na最多的列的名字.(在colNan中是行名) for i in range(len(colNan)): #遍历行 if colNan.iloc[i] &gt;= maxNan: # 保存Na数量最大值和Na最多的列名(colNan的行名) maxNan = colNan.iloc[i] colName = colNan.index[i] #在pandas中,index为行名,column为列名 print(maxNan) print(colName) 然后根据获得的最大Na值所在的列的列名(colNan中的行名)进行删除，并用一列的均值填充本列的Na，然后将数据转换为tensor： print(data.drop(labels=colName, axis=1)) print(data.drop(columns=colName)) #columns=labels等价于labels,axis=1 print(data) #默认的drop不会更改原数据 dataProcessed = data.drop(columns=colName) dataProcessed = dataProcessed.fillna(dataProcessed.mean()) #mean的默认axis为0,行标所在的轴,即纵轴,求不同行的均值,即一列的均值 print(dataProcessed) x = torch.tensor(dataProcessed.values) print(x)","link":"/2023/07/06/ml-datapreprocess/"}],"tags":[{"name":"communication","slug":"communication","link":"/tags/communication/"},{"name":"embedded","slug":"embedded","link":"/tags/embedded/"},{"name":"review","slug":"review","link":"/tags/review/"},{"name":"machine learning","slug":"machine-learning","link":"/tags/machine-learning/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[{"name":"Literature","slug":"literature","link":"/categories/literature/"},{"name":"Biped Robot","slug":"literature/biped-robot","link":"/categories/literature/biped-robot/"},{"name":"Technology","slug":"technology","link":"/categories/technology/"},{"name":"Hardware","slug":"technology/hardware","link":"/categories/technology/hardware/"},{"name":"AI","slug":"technology/ai","link":"/categories/technology/ai/"}],"pages":[{"title":"about","text":"RobotFreakJunior @ BIT, major in Mechatronic Engineering I started learning and exploring things about robots and robotics from sophomore in university. My current goal(for maybe 5 years) is to be familiar with some basic aspects about robots, like hardware, mechanical structure, controller development, perceptual and decision algorithm implementation and so on. On this basis, I decide to explore more in control. This blog is created to trace my learning of robotics, and it will be better if my blog would be of use to you. Things I am learning: RL control for quadruped robot Things waiting to be learned: 自动控制原理(传统控制理论+现代控制理论) 线性代数(快速重温一遍,理解概念) 现代机器人学(从速度与静力开始) 矩阵论 概率论与数理统计(快速重温一遍) 机器学习/深度学习(为DRL巩固基础) 电机学 机械(有待探索) 电路(有待探索) Projects waiting to be done: Holocubic/自己设计一款类似的桌面小机器人 trash classfication bluetooth serial host computer(蓝牙串口上位机,迭代改进) english words reciting software with GUI a small biped robot robotic arm","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}]}